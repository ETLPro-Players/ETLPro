# ______   _______   _
#|  ____| |__   __| | |
#| |__       | |    | |        ___    __ _    __ _    ___   _   _
#|  __|      | |    | |       / _ \  / _` |  / _` |  / __| | | | |
#| |____     | |    | |____  |  __/ | (_| | | (_| | | (__  | |_| |
#|______|    |_|    |______|  \___|  \__, |  \__,_|  \___|  \__, |
#                                     __/ |                  __/ |
#                                    |___/                  |___/
# 2024 Legacy team
name: ETLBuild

on:
#  pull_request:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  # Try to figure out the build version information only once
  version:
    runs-on: ubuntu-latest
    outputs:
      describe: ${{ steps.git.outputs.describe }}
      tag: ${{ steps.git.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history
          fetch-tags: true
          ref: ${{ github.ref }}  # Explicitly checkout the ref that triggered the workflow

      - name: Debug Git Info
        run: |
          echo "GitHub Ref: ${{ github.ref }}"
          echo "Current branch/tag:"
          git branch -a
          echo "Available tags:"
          git tag -l
          echo "Remote info:"
          git remote -v

      - name: Fetch git version information
        id: git
        run: |
          # Ensure we have all tags
          git fetch --tags --force --prune
          
          echo "Tags after fetch:"
          git tag -l
          
          # Get version info
          git_describe=$(git describe --tags --always 2>/dev/null || echo "unknown")
          git_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "unknown")
          
          echo "Debug: Using describe: $git_describe"
          echo "Debug: Using tag: $git_tag"
          echo "Version info: $git_describe ?? $git_tag"
          echo "describe=$git_describe" >> "$GITHUB_OUTPUT"
          echo "tag=$git_tag" >> "$GITHUB_OUTPUT"


#   __  __               _                                                  _     _
#  |  \/  |             | |                                                | |   (_)
#  | \  / |   ___     __| |     __ _    ___   _ __     ___   _ __    __ _  | |_   _    ___    _ __
#  | |\/| |  / _ \   / _` |    / _` |  / _ \ | '_ \   / _ \ | '__|  / _` | | __| | |  / _ \  | '_ \
#  | |  | | | (_) | | (_| |   | (_| | |  __/ | | | | |  __/ | |    | (_| | | |_  | | | (_) | | | | |
#  |_|  |_|  \___/   \__,_|    \__, |  \___| |_| |_|  \___| |_|     \__,_|  \__| |_|  \___/  |_| |_|
#                               __/ |
#                              |___/

  lnx64-mod:
    runs-on: ubuntu-20.04
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        env:
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{needs.version.outputs.tag}}
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{needs.version.outputs.tag}} -e CI=true
          run: |
            git config --global --add safe.directory /code
            ./easybuild.sh build -64 -mod

      - uses: actions/upload-artifact@v4
        with:
          name: lnx64-mod
          path: |
            build/legacy/cgame*.so
            build/legacy/ui*.so
            build/legacy/qagame*.so
            build/legacy/tvgame*.so
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: incomplete-mod-pk3
          path: build/legacy/legacy_*.pk3
          if-no-files-found: error

  lnx32-mod:
    runs-on: ubuntu-20.04
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        env:
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{needs.version.outputs.tag}}
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{needs.version.outputs.tag}} -e CI=true
          run: |
            git config --global --add safe.directory /code
            ./easybuild.sh build -mod

      - uses: actions/upload-artifact@v4
        with:
          name: lnx32-mod
          path: |
            build/legacy/cgame*.so
            build/legacy/ui*.so
            build/legacy/qagame*.so
            build/legacy/tvgame*.so
          if-no-files-found: error

  lnx-aarch64-mod:
    runs-on: ubuntu-20.04
    needs: version
    container:
      image: etlegacy/lnx-aarch64-build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        env:
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{needs.version.outputs.tag}}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          ./easybuild.sh build -RPIT -mod -ninja

      - uses: actions/upload-artifact@v4
        with:
          name: lnx-aarch64-mod
          path: |
            build/legacy/cgame*.so
            build/legacy/ui*.so
            build/legacy/qagame*.so
            build/legacy/tvgame*.so
          if-no-files-found: error

  osx-mod:
    runs-on: macos-13
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: brew bundle

      - name: List dev tools
        run: |
          # shellcheck disable=SC2010
          ls -la /Applications/ | grep Xcode
          ls -la /Library/Developer/CommandLineTools/SDKs/
          xcode-select --print-path
          xcrun -sdk macosx --show-sdk-path

      - name: Build
        env:
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
          DEVELOPER_DIR: /Library/Developer/CommandLineTools
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{needs.version.outputs.tag}}
        shell: bash
        run: |
          ./easybuild.sh build -64 -mod --osx=10.10 --osx-arc="x86_64;arm64" -j

      - uses: actions/upload-artifact@v4
        with:
          name: osx-mod
          path: |
            build/legacy/cgame_mac
            build/legacy/ui_mac
            build/legacy/qagame_mac
            build/legacy/tvgame_mac
          if-no-files-found: error

  win-mod:
    runs-on: windows-2019
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        shell: cmd
        env:
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{needs.version.outputs.tag}}
        run: |
          call .\easybuild.bat build -mod

      - uses: actions/upload-artifact@v4
        with:
          name: win-mod
          path: |
            build/legacy/cgame*.dll
            build/legacy/ui*.dll
            build/legacy/qagame*.dll
            build/legacy/tvgame*.dll
          if-no-files-found: error

  win64-mod:
    runs-on: windows-2019
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        shell: cmd
        env:
          CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
          CI_ETL_TAG: ${{needs.version.outputs.tag}}
        run: |
          call .\easybuild.bat build -mod -64

      - uses: actions/upload-artifact@v4
        with:
          name: win64-mod
          path: |
            build/legacy/cgame*.dll
            build/legacy/ui*.dll
            build/legacy/qagame*.dll
            build/legacy/tvgame*.dll
          if-no-files-found: error


#   __  __                                                          _
#  |  \/  |                                                        | |
#  | \  / |   ___   _ __    __ _    ___     _ __ ___     ___     __| |  ___
#  | |\/| |  / _ \ | '__|  / _` |  / _ \   | '_ ` _ \   / _ \   / _` | / __|
#  | |  | | |  __/ | |    | (_| | |  __/   | | | | | | | (_) | | (_| | \__ \
#  |_|  |_|  \___| |_|     \__, |  \___|   |_| |_| |_|  \___/   \__,_| |___/
#                           __/ |
#                          |___/
# Since lnx32 is installing the most, use it as the step that combines all the other steps mod files.
# This step also generates the final packages for 32 bit lnx.
  mod-merger:
    runs-on: ubuntu-20.04
    needs: [ version, lnx64-mod, lnx32-mod, osx-mod, win-mod, win64-mod, lnx-aarch64-mod ]
    steps:

      - uses: actions/download-artifact@v4
        with:
          name: incomplete-mod-pk3

      - uses: actions/download-artifact@v4
        with:
          pattern: '*-mod'
          path: platforms
          merge-multiple: true

      - name: Create supported platform manifest
        shell: bash
        run: |
          echo "win_x86 win_x86_64 lnx_x86 lnx_x86_64 macos_x86_64 macos_aarch64 lnx_armv8_64" > platforms.manifest

      - name: Merge mod files
        shell: bash
        run: |
          zip -rvj -MM legacy_*.pk3 platforms.manifest platforms/cgame* platforms/ui*

      - name: Create mod zip
        shell: bash
        run: |
          zip -rvj -MM etlegacy-mod-${{needs.version.outputs.describe}}.zip legacy_*.pk3 platforms/qagame* platforms/tvgame*

      - uses: actions/upload-artifact@v4
        with:
          name: All-mods
          path: legacy_*.pk3
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: mod-zip
          path: etlegacy-mod-*.zip
          if-no-files-found: error

#   ______   _                   _                            _
#  |  ____| (_)                 | |                          | |
#  | |__     _   _ __     __ _  | |    _ __     __ _    ___  | | __   __ _    __ _    ___   ___
#  |  __|   | | | '_ \   / _` | | |   | '_ \   / _` |  / __| | |/ /  / _` |  / _` |  / _ \ / __|
#  | |      | | | | | | | (_| | | |   | |_) | | (_| | | (__  |   <  | (_| | | (_| | |  __/ \__ \
#  |_|      |_| |_| |_|  \__,_| |_|   | .__/   \__,_|  \___| |_|\_\  \__,_|  \__, |  \___| |___/
#                                     | |                                     __/ |
#                                     |_|                                    |___/
# Generate the final packages for Lnx, macOS, Windows
  lnx64:
    runs-on: ubuntu-20.04
    needs: [ version, mod-merger ]
    env:
      CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
      CI_ETL_TAG: ${{needs.version.outputs.tag}}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{needs.version.outputs.tag}} -e CI=true
          run: |
            git config --global --add safe.directory /code
            ./easybuild.sh build -64

      - name: Change Owner of Container Working Directory
        run: |
          action_name=$(whoami)
          action_group=$(groups "$action_name" | awk '{print $3}')
          sudo chown "${action_name}:${action_group}" -R .

      - uses: actions/download-artifact@v4
        with:
          name: All-mods
          path: build/legacy

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/legacy

      - name: Generate packages
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{needs.version.outputs.tag}} -e CI=true
          run: |
            cd build/
            cpack

      - uses: actions/upload-artifact@v4
        with:
          name: lnx64-packages
          path: |
            build/etlegacy-*.tar.gz
            build/etlegacy-*.sh
          if-no-files-found: error

  lnx32:
    runs-on: ubuntu-20.04
    needs: [ version, mod-merger ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{needs.version.outputs.tag}} -e CI=true
          run: |
            git config --global --add safe.directory /code
            ./easybuild.sh build -32

      - name: Change Owner of Container Working Directory
        run: |
          action_name=$(whoami)
          action_group=$(groups "$action_name" | awk '{print $3}')
          sudo chown "${action_name}:${action_group}" -R .

      - uses: actions/download-artifact@v4
        with:
          name: All-mods
          path: build/legacy

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/legacy

      - name: Generate packages
        uses: addnab/docker-run-action@v3
        with:
          image: etlegacy/lnx-build:latest
          options: -v ${{ github.workspace }}:/code -e CI_ETL_DESCRIBE=${{needs.version.outputs.describe}} -e CI_ETL_TAG=${{needs.version.outputs.tag}} -e CI=true
          run: |
            cd build/
            cpack

      - uses: actions/upload-artifact@v4
        with:
          name: lnx32-packages
          path: |
            build/etlegacy-*.tar.gz
            build/etlegacy-*.sh
          if-no-files-found: error

  lnx-aarch64:
    runs-on: ubuntu-latest
    needs: [ version, mod-merger ]
    container:
      image: etlegacy/lnx-aarch64-build
    env:
      CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
      CI_ETL_TAG: ${{needs.version.outputs.tag}}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        run: |
          ./easybuild.sh build -RPIT -ninja

      - uses: actions/download-artifact@v4
        with:
          name: All-mods
          path: build/legacy

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/legacy

      - name: Generate packages
        shell: bash
        working-directory: build
        run: cpack

      - uses: actions/upload-artifact@v4
        with:
          name: lnx-aarch64-packages
          path: |
            build/etlegacy-*.tar.gz
            build/etlegacy-*.sh
          if-no-files-found: error

  osx:
    runs-on: macos-13
    needs: [ version, mod-merger ]
    env:
      CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
      CI_ETL_TAG: ${{needs.version.outputs.tag}}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: |
          brew bundle
          brew install freetype librsvg graphicsmagick imagemagick

      - name: Build
        env:
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
          DEVELOPER_DIR: /Library/Developer/CommandLineTools
        shell: bash
        run: |
          ./easybuild.sh build -64 --osx=10.10 --osx-arc="x86_64;arm64" -j

      - uses: actions/download-artifact@v4
        with:
          name: All-mods
          path: build/legacy

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/legacy

      - name: Generate packages
        shell: bash
        run: ./easybuild.sh package -64 --osx=10.10 --osx-arc="x86_64;arm64" -j

      - uses: actions/upload-artifact@v4
        with:
          name: osx-packages
          path: |
            build/etlegacy-*.tar.gz
            build/etlegacy-*.dmg
          if-no-files-found: error

  win:
    runs-on: windows-2019
    needs: [ version, mod-merger ]
    env:
      CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
      CI_ETL_TAG: ${{needs.version.outputs.tag}}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        shell: cmd
        run: |
          call .\easybuild.bat build

      - uses: actions/download-artifact@v4
        with:
          name: All-mods
          path: build/legacy

      - name: Display structure of downloaded files
        run: dir
        working-directory: build/legacy

      - name: Generate packages
        shell: cmd
        working-directory: build
        run: cpack

      - uses: actions/upload-artifact@v4
        with:
          name: win-packages
          path: |
            build/etlegacy-*.exe
            build/etlegacy-*.zip
          if-no-files-found: error

  win64:
    runs-on: windows-2019
    needs: [ version, mod-merger ]
    env:
      CI_ETL_DESCRIBE: ${{needs.version.outputs.describe}}
      CI_ETL_TAG: ${{needs.version.outputs.tag}}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        shell: cmd
        run: |
          call .\easybuild.bat build -64

      - uses: actions/download-artifact@v4
        with:
          name: All-mods
          path: build/legacy

      - name: Display structure of downloaded files
        run: dir
        working-directory: build/legacy

      - name: Generate packages
        shell: cmd
        working-directory: build
        run: cpack

      - uses: actions/upload-artifact@v4
        with:
          name: win64-packages
          path: |
            build/etlegacy-*.exe
            build/etlegacy-*.zip
          if-no-files-found: error


#   _    _           _                       _                         _      _____   _
#  | |  | |         | |                     | |                       | |    / ____| | |
#  | |  | |  _ __   | |   ___     __ _    __| |     __ _   _ __     __| |   | |      | |   ___    __ _   _ __    _   _   _ __
#  | |  | | | '_ \  | |  / _ \   / _` |  / _` |    / _` | | '_ \   / _` |   | |      | |  / _ \  / _` | | '_ \  | | | | | '_ \
#  | |__| | | |_) | | | | (_) | | (_| | | (_| |   | (_| | | | | | | (_| |   | |____  | | |  __/ | (_| | | | | | | |_| | | |_) |
#   \____/  | .__/  |_|  \___/   \__,_|  \__,_|    \__,_| |_| |_|  \__,_|    \_____| |_|  \___|  \__,_| |_| |_|  \__,_| | .__/
#           | |                                                                                                         | |
#           |_|                                                                                                         |_|

  create-release:
    runs-on: ubuntu-20.04
    needs: [ version, lnx32, lnx64, osx, win, win64, lnx-aarch64 ]
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Debug version outputs
        run: |
          echo "Version describe: ${{ needs.version.outputs.describe }}"
          echo "Version tag: ${{ needs.version.outputs.tag }}"
          echo "GitHub ref: ${{ github.ref }}"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: packages

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.version.outputs.describe }}
          name: ETLegacy ${{ needs.version.outputs.describe }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/master' }}
          files: |
            packages/lnx64-packages/*
            packages/lnx32-packages/*
            packages/osx-packages/*
            packages/win-packages/*
            packages/win64-packages/*
            packages/lnx-aarch64-packages/*
            packages/mod-zip/*